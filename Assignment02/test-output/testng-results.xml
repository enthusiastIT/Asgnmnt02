<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="24" passed="19" failed="5" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-01-05T16:19:05 IST" name="Suite" finished-at="2023-01-05T16:24:02 IST" duration-ms="297195">
    <groups>
    </groups>
    <test started-at="2023-01-05T16:19:05 IST" name="Test" finished-at="2023-01-05T16:24:02 IST" duration-ms="297195">
      <class name="testscripts.TestLoginFunctionality">
        <test-method is-config="true" signature="setup()[pri:0, instance:testscripts.TestLoginFunctionality@74235045]" started-at="2023-01-05T16:19:05 IST" name="setup" finished-at="2023-01-05T16:19:07 IST" duration-ms="2206" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testscripts.TestLoginFunctionality@74235045]" started-at="2023-01-05T16:19:08 IST" name="beforeMethod" finished-at="2023-01-05T16:19:14 IST" duration-ms="6671" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="enterLoginDetails(java.lang.String,java.lang.String)[pri:0, instance:testscripts.TestLoginFunctionality@74235045]" started-at="2023-01-05T16:19:14 IST" name="enterLoginDetails" data-provider="testLoginData" finished-at="2023-01-05T16:19:32 IST" duration-ms="17301" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[manager]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterLoginDetails -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testscripts.TestLoginFunctionality@74235045]" started-at="2023-01-05T16:19:32 IST" name="getResult" finished-at="2023-01-05T16:19:32 IST" duration-ms="304" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterLoginDetails status=SUCCESS method=TestLoginFunctionality.enterLoginDetails(java.lang.String,java.lang.String)[pri:0, instance:testscripts.TestLoginFunctionality@74235045] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testscripts.TestLoginFunctionality@74235045]" started-at="2023-01-05T16:19:32 IST" name="beforeMethod" finished-at="2023-01-05T16:19:33 IST" duration-ms="1505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="enterLoginDetails(java.lang.String,java.lang.String)[pri:0, instance:testscripts.TestLoginFunctionality@74235045]" started-at="2023-01-05T16:19:33 IST" name="enterLoginDetails" data-provider="testLoginData" finished-at="2023-01-05T16:19:50 IST" duration-ms="16537" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[trainee]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[trainee]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterLoginDetails -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testscripts.TestLoginFunctionality@74235045]" started-at="2023-01-05T16:19:50 IST" name="getResult" finished-at="2023-01-05T16:19:50 IST" duration-ms="39" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterLoginDetails status=SUCCESS method=TestLoginFunctionality.enterLoginDetails(java.lang.String,java.lang.String)[pri:0, instance:testscripts.TestLoginFunctionality@74235045] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testscripts.TestLoginFunctionality@74235045]" started-at="2023-01-05T16:19:50 IST" name="beforeMethod" finished-at="2023-01-05T16:19:51 IST" duration-ms="1282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="enterLoginDetails(java.lang.String,java.lang.String)[pri:0, instance:testscripts.TestLoginFunctionality@74235045]" started-at="2023-01-05T16:19:51 IST" name="enterLoginDetails" data-provider="testLoginData" finished-at="2023-01-05T16:20:06 IST" duration-ms="15230" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[trainee]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"#logoutLink"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.5.0', revision: 'fe167b119a'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.4.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [d8cbd48663e166ad6a6b1374b8e7b888, findElement {using=id, value=logoutLink}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Dell\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:50213}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50213/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: d8cbd48663e166ad6a6b1374b8e7b888]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"#logoutLink"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.5.0', revision: 'fe167b119a'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.4.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [d8cbd48663e166ad6a6b1374b8e7b888, findElement {using=id, value=logoutLink}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Dell\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:50213}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50213/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: d8cbd48663e166ad6a6b1374b8e7b888
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:365)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:357)
at testscripts.TestLoginFunctionality.enterLoginDetails(TestLoginFunctionality.java:118)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterLoginDetails -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testscripts.TestLoginFunctionality@74235045]" started-at="2023-01-05T16:20:07 IST" name="getResult" finished-at="2023-01-05T16:20:07 IST" duration-ms="163" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterLoginDetails status=FAILURE method=TestLoginFunctionality.enterLoginDetails(java.lang.String,java.lang.String)[pri:0, instance:testscripts.TestLoginFunctionality@74235045] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testscripts.TestLoginFunctionality@74235045]" started-at="2023-01-05T16:20:07 IST" name="beforeMethod" finished-at="2023-01-05T16:20:08 IST" duration-ms="1465" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="enterLoginDetails(java.lang.String,java.lang.String)[pri:0, instance:testscripts.TestLoginFunctionality@74235045]" started-at="2023-01-05T16:20:08 IST" name="enterLoginDetails" data-provider="testLoginData" finished-at="2023-01-05T16:20:23 IST" duration-ms="15239" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[trainee]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[manager]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"#logoutLink"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.5.0', revision: 'fe167b119a'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.4.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [d8cbd48663e166ad6a6b1374b8e7b888, findElement {using=id, value=logoutLink}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Dell\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:50213}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50213/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: d8cbd48663e166ad6a6b1374b8e7b888]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"#logoutLink"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.5.0', revision: 'fe167b119a'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.4.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [d8cbd48663e166ad6a6b1374b8e7b888, findElement {using=id, value=logoutLink}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Dell\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:50213}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50213/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: d8cbd48663e166ad6a6b1374b8e7b888
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:365)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:357)
at testscripts.TestLoginFunctionality.enterLoginDetails(TestLoginFunctionality.java:118)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterLoginDetails -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testscripts.TestLoginFunctionality@74235045]" started-at="2023-01-05T16:20:23 IST" name="getResult" finished-at="2023-01-05T16:20:24 IST" duration-ms="149" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterLoginDetails status=FAILURE method=TestLoginFunctionality.enterLoginDetails(java.lang.String,java.lang.String)[pri:0, instance:testscripts.TestLoginFunctionality@74235045] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testscripts.TestLoginFunctionality@74235045]" started-at="2023-01-05T16:20:24 IST" name="beforeMethod" finished-at="2023-01-05T16:20:25 IST" duration-ms="1470" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="enterLoginDetails(java.lang.String,java.lang.String)[pri:0, instance:testscripts.TestLoginFunctionality@74235045]" started-at="2023-01-05T16:20:25 IST" name="enterLoginDetails" data-provider="testLoginData" finished-at="2023-01-05T16:20:40 IST" duration-ms="15236" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[manager123]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"#logoutLink"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.5.0', revision: 'fe167b119a'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.4.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [d8cbd48663e166ad6a6b1374b8e7b888, findElement {using=id, value=logoutLink}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Dell\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:50213}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50213/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: d8cbd48663e166ad6a6b1374b8e7b888]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"#logoutLink"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.5.0', revision: 'fe167b119a'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.4.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [d8cbd48663e166ad6a6b1374b8e7b888, findElement {using=id, value=logoutLink}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Dell\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:50213}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50213/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: d8cbd48663e166ad6a6b1374b8e7b888
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:365)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:357)
at testscripts.TestLoginFunctionality.enterLoginDetails(TestLoginFunctionality.java:118)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterLoginDetails -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testscripts.TestLoginFunctionality@74235045]" started-at="2023-01-05T16:20:40 IST" name="getResult" finished-at="2023-01-05T16:20:40 IST" duration-ms="152" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterLoginDetails status=FAILURE method=TestLoginFunctionality.enterLoginDetails(java.lang.String,java.lang.String)[pri:0, instance:testscripts.TestLoginFunctionality@74235045] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testscripts.TestLoginFunctionality@74235045]" started-at="2023-01-05T16:20:40 IST" name="beforeMethod" finished-at="2023-01-05T16:20:42 IST" duration-ms="1896" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="enterLoginDetails(java.lang.String,java.lang.String)[pri:0, instance:testscripts.TestLoginFunctionality@74235045]" started-at="2023-01-05T16:20:42 IST" name="enterLoginDetails" data-provider="testLoginData" finished-at="2023-01-05T16:20:58 IST" duration-ms="15234" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[trainee]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[trainee123]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"#logoutLink"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.5.0', revision: 'fe167b119a'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.4.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [d8cbd48663e166ad6a6b1374b8e7b888, findElement {using=id, value=logoutLink}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Dell\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:50213}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50213/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: d8cbd48663e166ad6a6b1374b8e7b888]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"#logoutLink"}
  (Session info: chrome=108.0.5359.125)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.5.0', revision: 'fe167b119a'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.4.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [d8cbd48663e166ad6a6b1374b8e7b888, findElement {using=id, value=logoutLink}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 108.0.5359.125, chrome: {chromedriverVersion: 108.0.5359.71 (1e0e3868ee06..., userDataDir: C:\Users\Dell\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:50213}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50213/devtoo..., se:cdpVersion: 108.0.5359.125, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: d8cbd48663e166ad6a6b1374b8e7b888
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:365)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:357)
at testscripts.TestLoginFunctionality.enterLoginDetails(TestLoginFunctionality.java:118)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterLoginDetails -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testscripts.TestLoginFunctionality@74235045]" started-at="2023-01-05T16:20:58 IST" name="getResult" finished-at="2023-01-05T16:20:58 IST" duration-ms="133" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterLoginDetails status=FAILURE method=TestLoginFunctionality.enterLoginDetails(java.lang.String,java.lang.String)[pri:0, instance:testscripts.TestLoginFunctionality@74235045] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testscripts.TestLoginFunctionality -->
      <class name="testscripts.TestReviewLeavesFunctionality">
        <test-method is-config="true" signature="setup()[pri:0, instance:testscripts.TestReviewLeavesFunctionality@28701274]" started-at="2023-01-05T16:19:07 IST" name="setup" finished-at="2023-01-05T16:19:07 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testscripts.TestReviewLeavesFunctionality@28701274]" started-at="2023-01-05T16:23:37 IST" name="beforeMethod" finished-at="2023-01-05T16:23:40 IST" duration-ms="3057" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="viewLeavesReport()[pri:0, instance:testscripts.TestReviewLeavesFunctionality@28701274]" started-at="2023-01-05T16:23:40 IST" name="viewLeavesReport" finished-at="2023-01-05T16:23:44 IST" duration-ms="3678" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewLeavesReport -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testscripts.TestReviewLeavesFunctionality@28701274]" started-at="2023-01-05T16:23:44 IST" name="getResult" finished-at="2023-01-05T16:23:44 IST" duration-ms="36" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=viewLeavesReport status=SUCCESS method=TestReviewLeavesFunctionality.viewLeavesReport()[pri:0, instance:testscripts.TestReviewLeavesFunctionality@28701274] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="finish()[pri:0, instance:testscripts.TestReviewLeavesFunctionality@28701274]" started-at="2023-01-05T16:23:44 IST" name="finish" finished-at="2023-01-05T16:24:02 IST" duration-ms="17930" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finish -->
      </class> <!-- testscripts.TestReviewLeavesFunctionality -->
      <class name="testscripts.TestUserProfileFunctionality">
        <test-method is-config="true" signature="setup()[pri:0, instance:testscripts.TestUserProfileFunctionality@36fc695d]" started-at="2023-01-05T16:23:28 IST" name="setup" finished-at="2023-01-05T16:23:28 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testscripts.TestUserProfileFunctionality@36fc695d]" started-at="2023-01-05T16:23:28 IST" name="beforeMethod" finished-at="2023-01-05T16:23:30 IST" duration-ms="2330" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="viewUserProfile()[pri:1, instance:testscripts.TestUserProfileFunctionality@36fc695d]" started-at="2023-01-05T16:23:30 IST" name="viewUserProfile" finished-at="2023-01-05T16:23:31 IST" duration-ms="291" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewUserProfile -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testscripts.TestUserProfileFunctionality@36fc695d]" started-at="2023-01-05T16:23:31 IST" name="getResult" finished-at="2023-01-05T16:23:31 IST" duration-ms="56" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=viewUserProfile status=SUCCESS method=TestUserProfileFunctionality.viewUserProfile()[pri:1, instance:testscripts.TestUserProfileFunctionality@36fc695d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testscripts.TestUserProfileFunctionality@36fc695d]" started-at="2023-01-05T16:23:31 IST" name="beforeMethod" finished-at="2023-01-05T16:23:32 IST" duration-ms="1068" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUserDetailsDisplay()[pri:2, instance:testscripts.TestUserProfileFunctionality@36fc695d]" started-at="2023-01-05T16:23:32 IST" name="verifyUserDetailsDisplay" finished-at="2023-01-05T16:23:33 IST" duration-ms="1639" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserDetailsDisplay -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testscripts.TestUserProfileFunctionality@36fc695d]" started-at="2023-01-05T16:23:33 IST" name="getResult" finished-at="2023-01-05T16:23:33 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserDetailsDisplay status=SUCCESS method=TestUserProfileFunctionality.verifyUserDetailsDisplay()[pri:2, instance:testscripts.TestUserProfileFunctionality@36fc695d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testscripts.TestUserProfileFunctionality@36fc695d]" started-at="2023-01-05T16:23:33 IST" name="beforeMethod" finished-at="2023-01-05T16:23:35 IST" duration-ms="1069" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="viewPermissionInfo()[pri:3, instance:testscripts.TestUserProfileFunctionality@36fc695d]" started-at="2023-01-05T16:23:35 IST" name="viewPermissionInfo" finished-at="2023-01-05T16:23:36 IST" duration-ms="1629" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewPermissionInfo -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testscripts.TestUserProfileFunctionality@36fc695d]" started-at="2023-01-05T16:23:36 IST" name="getResult" finished-at="2023-01-05T16:23:36 IST" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=viewPermissionInfo status=SUCCESS method=TestUserProfileFunctionality.viewPermissionInfo()[pri:3, instance:testscripts.TestUserProfileFunctionality@36fc695d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testscripts.TestUserProfileFunctionality@36fc695d]" started-at="2023-01-05T16:23:36 IST" name="afterClass" finished-at="2023-01-05T16:23:37 IST" duration-ms="1136" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testscripts.TestUserProfileFunctionality -->
      <class name="testscripts.TestTimeTrackFunctionality">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:20:58 IST" name="beforeClass" finished-at="2023-01-05T16:21:00 IST" duration-ms="2067" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:21:00 IST" name="beforeMethod" finished-at="2023-01-05T16:21:04 IST" duration-ms="4627" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="notReadyStatus_approval()[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:21:04 IST" name="notReadyStatus_approval" finished-at="2023-01-05T16:21:21 IST" duration-ms="17106" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- notReadyStatus_approval -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:21:21 IST" name="getResult" finished-at="2023-01-05T16:21:22 IST" duration-ms="48" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=notReadyStatus_approval status=SUCCESS method=TestTimeTrackFunctionality.notReadyStatus_approval()[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:21:22 IST" name="beforeMethod" finished-at="2023-01-05T16:21:23 IST" duration-ms="1868" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="notReadyStatus_rejection()[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:21:23 IST" name="notReadyStatus_rejection" finished-at="2023-01-05T16:21:37 IST" duration-ms="13913" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- notReadyStatus_rejection -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:21:37 IST" name="getResult" finished-at="2023-01-05T16:21:37 IST" duration-ms="23" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=notReadyStatus_rejection status=SUCCESS method=TestTimeTrackFunctionality.notReadyStatus_rejection()[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:21:37 IST" name="beforeMethod" finished-at="2023-01-05T16:21:39 IST" duration-ms="1805" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="readyForApprovalstatus_approval()[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:21:39 IST" name="readyForApprovalstatus_approval" finished-at="2023-01-05T16:21:54 IST" duration-ms="15223" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readyForApprovalstatus_approval -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:21:54 IST" name="getResult" finished-at="2023-01-05T16:21:54 IST" duration-ms="19" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=readyForApprovalstatus_approval status=SUCCESS method=TestTimeTrackFunctionality.readyForApprovalstatus_approval()[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:21:54 IST" name="beforeMethod" finished-at="2023-01-05T16:21:56 IST" duration-ms="2019" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="readyForApproveStatus_rejection()[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:21:56 IST" name="readyForApproveStatus_rejection" finished-at="2023-01-05T16:22:10 IST" duration-ms="13817" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readyForApproveStatus_rejection -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:22:10 IST" name="getResult" finished-at="2023-01-05T16:22:10 IST" duration-ms="17" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=readyForApproveStatus_rejection status=SUCCESS method=TestTimeTrackFunctionality.readyForApproveStatus_rejection()[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:22:10 IST" name="beforeMethod" finished-at="2023-01-05T16:22:12 IST" duration-ms="1779" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="rejectStatus_approval()[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:22:12 IST" name="rejectStatus_approval" finished-at="2023-01-05T16:22:29 IST" duration-ms="16722" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rejectStatus_approval -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:22:29 IST" name="getResult" finished-at="2023-01-05T16:22:29 IST" duration-ms="19" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=rejectStatus_approval status=SUCCESS method=TestTimeTrackFunctionality.rejectStatus_approval()[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:22:29 IST" name="beforeMethod" finished-at="2023-01-05T16:22:31 IST" duration-ms="1803" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="revokeApproval()[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:22:31 IST" name="revokeApproval" finished-at="2023-01-05T16:22:46 IST" duration-ms="15131" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- revokeApproval -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:22:46 IST" name="getResult" finished-at="2023-01-05T16:22:46 IST" duration-ms="12" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=revokeApproval status=SUCCESS method=TestTimeTrackFunctionality.revokeApproval()[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:22:46 IST" name="beforeMethod" finished-at="2023-01-05T16:22:48 IST" duration-ms="1815" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="selectStatusDropdown(int)[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:22:48 IST" name="selectStatusDropdown" data-provider="testStatusFilterData" finished-at="2023-01-05T16:22:51 IST" duration-ms="3537" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectStatusDropdown -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:22:51 IST" name="getResult" finished-at="2023-01-05T16:22:51 IST" duration-ms="18" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectStatusDropdown status=SUCCESS method=TestTimeTrackFunctionality.selectStatusDropdown(int)[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:22:51 IST" name="beforeMethod" finished-at="2023-01-05T16:22:53 IST" duration-ms="1794" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="selectStatusDropdown(int)[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:22:53 IST" name="selectStatusDropdown" data-provider="testStatusFilterData" finished-at="2023-01-05T16:22:57 IST" duration-ms="3737" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectStatusDropdown -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:22:57 IST" name="getResult" finished-at="2023-01-05T16:22:57 IST" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectStatusDropdown status=SUCCESS method=TestTimeTrackFunctionality.selectStatusDropdown(int)[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:22:57 IST" name="beforeMethod" finished-at="2023-01-05T16:22:59 IST" duration-ms="2049" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="selectStatusDropdown(int)[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:22:59 IST" name="selectStatusDropdown" data-provider="testStatusFilterData" finished-at="2023-01-05T16:23:02 IST" duration-ms="2985" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectStatusDropdown -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:23:02 IST" name="getResult" finished-at="2023-01-05T16:23:02 IST" duration-ms="18" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectStatusDropdown status=SUCCESS method=TestTimeTrackFunctionality.selectStatusDropdown(int)[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:23:02 IST" name="beforeMethod" finished-at="2023-01-05T16:23:04 IST" duration-ms="2000" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="selectStatusDropdown(int)[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:23:04 IST" name="selectStatusDropdown" data-provider="testStatusFilterData" finished-at="2023-01-05T16:23:08 IST" duration-ms="4001" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectStatusDropdown -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:23:08 IST" name="getResult" finished-at="2023-01-05T16:23:08 IST" duration-ms="19" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectStatusDropdown status=SUCCESS method=TestTimeTrackFunctionality.selectStatusDropdown(int)[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:23:08 IST" name="beforeMethod" finished-at="2023-01-05T16:23:10 IST" duration-ms="2115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="selectStatusDropdown(int)[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:23:10 IST" name="selectStatusDropdown" data-provider="testStatusFilterData" finished-at="2023-01-05T16:23:14 IST" duration-ms="3848" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectStatusDropdown -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:23:14 IST" name="getResult" finished-at="2023-01-05T16:23:14 IST" duration-ms="19" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectStatusDropdown status=SUCCESS method=TestTimeTrackFunctionality.selectStatusDropdown(int)[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:23:14 IST" name="beforeMethod" finished-at="2023-01-05T16:23:16 IST" duration-ms="2048" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="selectStatusDropdown(int)[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:23:16 IST" name="selectStatusDropdown" data-provider="testStatusFilterData" finished-at="2023-01-05T16:23:19 IST" duration-ms="3270" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectStatusDropdown -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:23:19 IST" name="getResult" finished-at="2023-01-05T16:23:19 IST" duration-ms="20" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectStatusDropdown status=SUCCESS method=TestTimeTrackFunctionality.selectStatusDropdown(int)[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:23:19 IST" name="beforeMethod" finished-at="2023-01-05T16:23:21 IST" duration-ms="1994" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="selectStatusDropdown(int)[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:23:21 IST" name="selectStatusDropdown" data-provider="testStatusFilterData" finished-at="2023-01-05T16:23:25 IST" duration-ms="3566" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectStatusDropdown -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:23:25 IST" name="getResult" finished-at="2023-01-05T16:23:25 IST" duration-ms="18" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectStatusDropdown status=SUCCESS method=TestTimeTrackFunctionality.selectStatusDropdown(int)[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:23:25 IST" name="beforeMethod" finished-at="2023-01-05T16:23:27 IST" duration-ms="2026" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="selectStatusDropdown(int)[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:23:27 IST" name="selectStatusDropdown" data-provider="testStatusFilterData" finished-at="2023-01-05T16:23:28 IST" duration-ms="1292" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:976)
at org.testng.Assert.assertEquals(Assert.java:1010)
at testscripts.TestTimeTrackFunctionality.selectStatusDropdown(TestTimeTrackFunctionality.java:354)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectStatusDropdown -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916]" started-at="2023-01-05T16:23:28 IST" name="getResult" finished-at="2023-01-05T16:23:28 IST" duration-ms="158" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectStatusDropdown status=FAILURE method=TestTimeTrackFunctionality.selectStatusDropdown(int)[pri:0, instance:testscripts.TestTimeTrackFunctionality@2b71e916] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- testscripts.TestTimeTrackFunctionality -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
